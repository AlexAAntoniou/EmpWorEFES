<?xml version="1.0"?>
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">

  <!-- Project sitemap for private URLs, such as editorial processes
       like Schematron validation. -->

  <map:pipelines>
    <!-- Mount sub-sitemaps. -->
    <map:pipeline id="local-private-mount">
      <!-- Mount a sitemap for generating and querying RDF. -->
      <map:match pattern="rdf/**">
        <map:mount check-reload="yes" src="rdf.xmap" uri-prefix="rdf/" />
      </map:match>
    </map:pipeline>

    <map:pipeline>
      <!-- Present a table of XML documents and the processes that
           might be applied to them. -->
      <map:match pattern="xml/index.html">
        <map:generate src="../content/xml" type="directory">
          <map:parameter name="depth" value="99" />
          <map:parameter name="exclude" value="^\..*" />
        </map:generate>
        <map:transform src="../stylesheets/private/xml-dirs-to-process-list-html.xsl">
          <map:parameter name="initial_path" value="content/" />
        </map:transform>
        <map:serialize />
      </map:match>
    </map:pipeline>

    <map:pipeline id="local-solr">
      <!-- List links to all index URLs for the site. Note that the
           URL matched here is referenced by the Ant build task used
           for performing the recursive crawl to actual perform the
           indexing, so do not change it! -->
      <map:match pattern="solr/index/site-list.html">
        <map:generate src="../content/xml" type="directory">
          <map:parameter name="depth" value="99" />
          <map:parameter name="exclude" value="^\..*" />
        </map:generate>
        <map:transform src="../stylesheets/private/xml-dirs-to-index-list-html.xsl" />
        <map:serialize />
      </map:match>

      <!-- Solr indexing. -->
      <map:match pattern="solr/index/*/**.xml">
        <map:generate src="cocoon://_internal/solr/index/{1}/{2}.xml" />
        <map:serialize type="xml" />
      </map:match>

      <!-- Preprocessing of material before indexing. -->

      <!-- TEI preprocessed for use with EATS data. -->
      <map:match pattern="solr/preprocess/tei-eats/**.xml">
        <map:generate src="../content/xml/{1}.xml" />
        <map:serialize type="xml" />
      </map:match>

      <!-- EATSML, all entities. -->
      <map:match pattern="solr/preprocess/eatsml/entities.xml">
        <map:generate src="cocoon://_internal/eats/entities.xml" />
        <map:serialize type="xml" />
      </map:match>

      <!-- EATSML, entities associated with a single authority. -->
      <map:match pattern="solr/preprocess/eatsml/*/entities.xml">
        <map:generate src="cocoon://_internal/eats/{1}/entities.xml" />
        <map:serialize type="xml" />
      </map:match>

      <!-- The general case of preprocessing some type of TEI. -->
      <map:match pattern="solr/preprocess/*/**.xml">
        <map:generate src="../content/xml/{2}.xml" />
        <map:serialize type="xml" />
      </map:match>
    </map:pipeline>

    <map:pipeline id="local-schematron">
      <!-- Schematron validation. This is the project-specific
           interface to Kiln's Schematron handling.

           In the following example, simplified URLs are made
           available, where the generator supplies the majority of the
           details.

           Other matches with fully parameterised patterns can equally
           map to Kiln's internal pipelines for greater control. -->
      <map:match pattern="xml/schematron/**.html">
        <map:aggregate element="aggregation">
          <!-- #PROJECT means that the schema used is that extract
               from the project's encoding guidelines. #ALL means that
               all phases specified in the schema are used. -->
          <map:part src="cocoon://_internal/schematron/validate/#PROJECT/#ALL/{1}.xml" />
        </map:aggregate>
        <map:transform src="cocoon://_internal/template/schematron.xsl">
          <map:parameter name="file" value="{1}.xml" />
        </map:transform>
        <map:serialize />
      </map:match>
    </map:pipeline>

    <!-- Pipeline for displaying reports of checking that linked local
         resource exist. -->
    <map:pipeline id="local-resource-check">
      <map:match pattern="xml/resource-check/images/**.html">
        <map:aggregate element="aggregation">
          <map:part src="cocoon:/xml/resource-check/images/{1}.xml" />
        </map:aggregate>
        <map:transform src="cocoon://_internal/template/resource_check.xsl" />
        <map:serialize />
      </map:match>
    </map:pipeline>

    <!-- Internal pipeline for checking that linked local resources
         exist - for example, that all of the images referenced in a
         TEI document are present in the correct place on the
         filesystem. -->
    <map:pipeline id="local-internal-resource-check" internal-only="false">
      <map:match pattern="xml/resource-check/images/**.xml">
        <map:aggregate element="aggregation">
          <map:part src="cocoon://private/xml/resource-check/image-refs/{1}.xml" />
          <map:part src="cocoon://private/xml/resource-check/image-files.xml" />
        </map:aggregate>
        <map:transform src="../kiln/stylesheets/resource-check/check-missing-resources.xsl" />
        <map:serialize type="xml" />
      </map:match>

      <!-- Generate a list of image references from the XML
           documents. This is based on the Kiln metadata listing, but
           allows for the strict list of image references to be
           expanded to accommodate multiple derivatives (eg,
           thumbnails) of each image. -->
      <map:match pattern="xml/resource-check/image-refs/**.xml">
        <map:generate src="cocoon://_internal/metadata/images/{1}.xml" />
        <map:transform src="../stylesheets/private/expand-image-refs.xsl" />
        <map:serialize type="xml" />
      </map:match>

      <!-- Generate a list of image files from the filesystem. -->
      <map:match pattern="xml/resource-check/image-files.xml">
        <map:generate src="../content/images" type="imagedirectory">
          <map:parameter name="depth" value="99" />
          <map:parameter name="exclude" value="^\..*" />
        </map:generate>
        <map:transform src="../kiln/stylesheets/resource-check/flatten-dir-list.xsl" />
        <map:serialize type="xml" />
      </map:match>
    </map:pipeline>

    <!-- Pipeline for testing. -->
    <map:pipeline id="local-testing">
      <!-- Test a template against an empty document. -->
      <map:match pattern="test/template/**.html">
        <map:aggregate element="aggregation">
          <map:part src="empty:index" />
          <map:part src="cocoon://_internal/menu/main.xml" />
        </map:aggregate>
        <map:transform src="cocoon://_internal/template/{1}.xsl" />
        <map:serialize />
      </map:match>

      <!-- Generate a template XSLT. -->
      <map:match pattern="test/template/**.xsl">
        <map:generate src="cocoon://_internal/template/{1}.xsl" />
        <map:serialize type="xml" />
      </map:match>
    </map:pipeline>
  </map:pipelines>
</map:sitemap>
